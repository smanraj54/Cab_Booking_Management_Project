image: maven:latest

cache:
  paths:
    - .m2/repository/
    - target/

stages:
  # These are the three states we want, building the app, testing it by
  # executing unit tests and checking the results, and finally if this
  - build
  # You will need to define this stage somewhere below.
  - test
  # I will provide this example for you below.
  - develop
  - production

# build stage will just build the codebase without running
# any tests or creating any jar file.
build:
  stage: build
  tags:
    - ugrad
  script:
    - mvn clean compile

# test stage will compile the code and run all the unit tests present in the
# test folder.
test:
  stage: test
  tags:
    - ugrad
  script:
    - mvn clean test


## deploy stage will create package the jar and keep it in the target folder.
## The success of deploy stage will mark the pipeline as passed.
deploy:
  stage: develop
  tags:
    - ugrad
  script:
    - echo "dbURL=$DATABASE_URL" > config.properties
    - echo "dbUserName=$TEST_DATABASE_USERNAME" >> config.properties
    - echo "dbPassword=$TEST_DATABASE_PASSWORD" >> config.properties
    - echo "dbDriver=$TEST_DATABASE" >> config.properties
    - echo "$CI_COMMIT_REF_NAME"
    - zip -r ${CI_COMMIT_SHORT_SHA}.zip . -i target/cabby-1.0-jar-with-dependencies.jar
    - scp -r -o StrictHostKeyChecking=no ${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.zip "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/${CI_COMMIT_REF_NAME}_${CI_COMMIT_SHORT_SHA}.zip"
    - scp -r -o StrictHostKeyChecking=no config.properties "${DEPLOY_USER}@${DEPLOY_HOST}:${DEPLOY_DIR}/config.properties"
  only:
    - develop